install
<%= @mediapath %>
lang en_US.UTF-8
selinux --permissive
keyboard us
skipx
network --bootproto <%= @static ? "static" : "dhcp" %> --hostname <%= @host %>
rootpw --iscrypted <%= root_pass %>
firewall --<%= @host.operatingsystem.major.to_i >= 6 ? "service=" : "" %>ssh
authconfig --useshadow --passalgo=sha256 --kickstart

timezone Americas/Chicago --ntpservers 0.fedora.pool.ntp.org
services --disabled autofs,gpm,sendmail,cups,iptables,ip6tables,auditd,arptables_jf,xfs,pcmcia,isdn,rawdevices,hpoj,bluetooth,openibd,avahi-daemon,avahi-dnsconfd,hidd,hplip,pcscd,restorecond,mcstrans,rhnsd,yum-updatesd,NetworkManager
services --enabled ntpd

bootloader --location=mbr --append="nofb quiet splash=quiet" <%= grub_pass %>

<% if @dynamic -%>
%include /tmp/diskpart.cfg
<% else -%>
<%= @host.diskLayout %>
<% end -%>

text
reboot

%packages --ignoremissing
yum
dhclient
ntp
wget
redhat-lsb-core
@Core
subscription-manager
yum-utils
-NetworkManager*
-firewalld
iptables
iptables-services
%end

<% if @dynamic -%>
%pre
<%= @host.diskLayout %>
%end
<% end -%>

%post --nochroot
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
cp -va /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
/usr/bin/chvt 1
) 2>&1 | tee /mnt/sysimage/root/install.postnochroot.log
%end

%post
logger "Starting anaconda <%= @host %> postinstall"
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
#update local time
echo "updating system time"
/usr/sbin/ntpdate -sub <%= @host.params["ntp-server"] || "0.fedora.pool.ntp.org" %>
/usr/sbin/hwclock --systohc


<%= snippets "interface_config" %>
<%= snippets "bond_interfaces" %>

echo "Starting the subscription-manager registration process"
#yum -t -y -e 0 install subscription-manager yum-utils

[[ "<%= @host.params['subscription_manager_proxy'] %>" ]] && {
  ProxyCmd="--server.proxy_hostname <%= @host.params['subscription_manager_proxy'] %>"

  [[ "<%= @host.params['subscription_manager_proxy_port'] %>" ]] && ProxyCmd+=" --server.proxy_port <%= @host.params['subscription_manager_proxy_port'] %>"
  [[ "<%= @host.params['subscription_manager_proxy_user'] %>" ]] && ProxyCmd+=" --server.proxy_user <%= @host.params['subscription_manager_proxy_user'] %>"
  [[ "<%= @host.params['subscription_manager_proxy_password'] %>" ]] && ProxyCmd+=" --server.proxy_password <%= @host.params['subscription_manager_proxy_password'] %>"

  subscription-manager config ${ProxyCmd}
  }


subscription-manager register --username="<%= @host.params['subscription_manager_username'] %>" --password="<%= @host.params['subscription_manager_password'] %>"

subscription-manager attach --pool="<%= @host.params['subscription_manager_pool'] %>"

cd /etc/yum.repos.d/

# This is a hack for puddles and won't be needed when we get a pool

wget ftp://partners.redhat.com/8aa5fd896ed3a83f6533a78287906111/OpenStack/6.0-Beta-2/RH7-RHOS-6.0.repo

subscription-manager repos $( sed -e "s/,\s*/ --enable /g" -e "s/^/--enable /" <<< "<%= @host.params['subscription_manager_repos'] %>" )

systemctl stop firewalld
systemctl disable firewalld

# update all the base packages from the updates repository
yum -t -y -e 0 update
yum list "*puppet*"

# and add the puppet package
yum -t -y -e 0 install puppet

echo "Configuring puppet"
cat > /etc/puppet/puppet.conf << EOF
<%= snippets "puppet.conf" %>
EOF

# Setup puppet to run on system reboot
/sbin/chkconfig --level 345 puppet on

puppet agent -o --tags no_such_tag --server <%= @host.puppetmaster %>  --no-daemonize

sync

# Inform the build system that we are done.
echo "Informing Foreman that we are built"
wget -q -O /dev/null --no-check-certificate <%= foreman_url %>

# while [ ! -e /tmp/continue ]
# do
#   sleep 5
# done

exit 0

) 2>&1 | tee /root/install.post.log

%end
