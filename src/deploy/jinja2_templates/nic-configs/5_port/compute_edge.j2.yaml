heat_template_version: rocky
description: >
  Bond and VLAN configuration for compute nodes. comment14_0: ' The values of the following parameters are overridden by the
  entries in' comment15_0: ' network-environment.yaml'
{%- if resource_registry%}
resource_registry:
  {%- for port, port_path in resource_registry.items() %}
  {{port}}: {{port_path}}
  {%- endfor %}
{%- endif %}
parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ExternalIpSubnet:
    default: ''
    description: IP address/subnet on the external network
    type: string
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal API network
    type: string
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageMgmtIpSubnet:
    default: ''
    description: IP address/subnet on the storage mgmt network
    type: string
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  ManagementIpSubnet: # Only populated when including environments/network-management.yaml
    default: ''
    description: IP address/subnet on the management network
    type: string
  ExternalNetworkVlanID:
    default: 10
    description: Vlan ID for the external network traffic.
    type: number
  InternalApiNetworkVlanID:
    default: 20
    description: Vlan ID for the internal_api network traffic.
    type: number
  StorageNetworkVlanID:
    default: 30
    description: Vlan ID for the storage network traffic.
    type: number
  TenantNetworkVlanID:
    default: 50
    description: Vlan ID for the tenant network traffic.
    type: number
  ManagementNetworkVlanID:
    default: 60
    description: Vlan ID for the management network traffic.
    type: number
  ControlPlaneSubnetCidr: # Override this via parameter_defaults
    default: '24'
    description: The subnet CIDR of the control plane network.
    type: string
  ControlPlaneNetCidr:
    description: Control plane/provisioning network and mask
    type: string
  ControlPlaneStaticRoutes:
    default: []
    description: >
      Routes for the ctlplane network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  StorageInterfaceRoutes:
    default: []
    description: >
      Routes for the storage network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  InternalApiInterfaceRoutes:
    default: []
    description: >
      Routes for the internal_api network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  TenantInterfaceRoutes:
    default: []
    description: >
      Routes for the tenant network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  ControlPlaneDefaultRoute: # Override this via parameter_defaults
    description: The default route of the control plane network.
    type: string
  ExternalInterfaceDefaultRoute: # Not used by default in this template
    default: 10.0.0.1
    description: The default route of the external network.
    type: string
  ManagementInterfaceDefaultRoute: # Commented out by default in this template
    default: unset
    description: The default route of the management network.
    type: string
  DnsServers: # Override this via parameter_defaults
    default: []
    description: A list of DNS servers (2 max for some implementations) that will be added to resolv.conf.
    type: comma_delimited_list
  EC2MetadataIp: # Override this via parameter_defaults
    description: The IP address of the EC2 metadata server.
    type: string
  ComputeProvisioningInterface:
    default: em3
    description: Provisioning interface name
    type: string
  ComputeBond0Interface1:
    default: em1
    description: Bond 0 interface 1 name
    type: string
  ComputeBond0Interface2:
    default: p3p1
    description: Bond 0 interface 2 name
    type: string
  ComputeBond1Interface1:
    default: em2
    description: Bond 1 interface 1 name
    type: string
  ComputeBond1Interface2:
    default: p3p2
    description: Bond 1 interface 2 name
    type: string
  ComputeBondInterfaceOptions:
    default: mode=802.3ad miimon=100 xmit_hash_policy=layer3+4 lacp_rate=1
    description: The bonding_options string for the bond interface.
    type: string
  ControlPlaneMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the network.
      (The parameter is automatically resolved from the ctlplane network's mtu attribute.)
    type: number
  ExternalMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  InternalApiMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  StorageMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  StorageMgmtMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  TenantMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  ProvisioningMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  ManagementMtu: # Override this via parameter_defaults
    default: 1500
    description: MTU value for this network.
    type: number
  DefaultBondMtu: # Override this via parameter_defaults
    default: 9000
    description: MTU value for this network.
    type: number
{%- for key, _dict in parameters.items() %}
  {{key}}:
  {%- for _key, _val in _dict.items() %}
    {{_key}}: {{_val}}
  {%- endfor %}
{%- endfor %}

resources:
  OsNetConfigImpl:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template:
            get_file: /usr/share/openstack-tripleo-heat-templates/network/scripts/run-os-net-config.sh
          params:
            $network_config:
              network_config:
              {%- for cfg in network_config %}
              - type: {{cfg.type}}
                {%- if cfg.type == 'interface' %}
                name:
                  get_param: {{cfg.name}}
                {%- else %}
                name: {{cfg.name}}
                {%- endif %}
                mtu:
                  get_param: {{cfg.mtu}}
                {%- if cfg.type == 'interface' %}
                use_dhcp: {{cfg.use_dhcp}}
                dns_servers:
                  get_param: {{cfg.dns_servers}}
                addresses:
                  {%- for address in cfg.addresses %}
                - ip_netmask:
                    list_join:
                    - /
                    - - get_param: {{address.ip}}
                      - get_param: {{address.cidr}}
                  {%- endfor %}
                routes:
                  {%- for route in cfg.routes %}
                    {%- if 'default' in route %}
                - default: {{route.default}}
                    {%- endif %}
                    {%- if 'ip_netmask' in route %}
                - ip_netmask:
                    get_param: {{route.ip_netmask}}
                    {%- endif %}
                  next_hop:
                    get_param: {{route.next_hop}}
                  {%- endfor %}
                {% elif cfg.type == 'ovs_bridge' %}
                members:
                  {%- for bridge_member in cfg.members %}
                  - type: {{bridge_member.type}}
                    {%- if bridge_member.type == 'linux_bond' %}
                    name: {{bridge_member.name}}
                    bonding_options:
                      get_param: {{bridge_member.bonding_options}}
                    mtu:
                      get_param: {{bridge_member.mtu}}
                    members:
                      {%- for bond_member in bridge_member.members %}
                    - type: {{bond_member.type}}
                      name:
                        get_param: {{bond_member.name}}
                      mtu:
                        get_param: {{bond_member.mtu}}
                        {%- if 'primary' in bond_member %}
                      primary: {{bond_member.primary}}
                        {%- endif %}
                      {%- endfor %}
                    {%- elif bridge_member.type == 'vlan' %}
                    device: {{bridge_member.device}}
                    vlan_id:
                      get_param: {{bridge_member.vlan_id}}
                    mtu:
                      get_param: {{bridge_member.mtu}}
                    addresses:
                      {%- for vlan_address in bridge_member.addresses %}
                    - ip_netmask:
                        get_param: {{vlan_address.ip_netmask}}
                      {%- endfor %}
                      {%- if 'routes' in bridge_member %}
                    routes:
                      get_param: {{bridge_member.routes}}
                      {%- endif %}
                    {%- endif %}
                  {%- endfor %}
                {%- endif %}
              {%- endfor %}
outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value:
      get_resource: OsNetConfigImpl
