--- raid.py.orig	2017-06-16 07:56:01.000000000 +0000
+++ raid.py	2017-09-22 20:56:07.018470898 +0000
@@ -73,7 +73,7 @@
     'PhysicalDisk',
     ['id', 'description', 'controller', 'manufacturer', 'model', 'media_type',
      'interface_type', 'size_mb', 'free_size_mb', 'serial_number',
-     'firmware_version', 'status', 'raid_status'])
+     'firmware_version', 'status', 'raid_status', 'sas_address'])
 
 
 class PhysicalDisk(PhysicalDiskTuple):
@@ -107,7 +107,7 @@
 
 RAIDController = collections.namedtuple(
     'RAIDController', ['id', 'description', 'manufacturer', 'model',
-                       'primary_status', 'firmware_version'])
+                       'primary_status', 'firmware_version', 'bus'])
 
 VirtualDiskTuple = collections.namedtuple(
     'VirtualDisk',
@@ -187,7 +187,8 @@
                 self._get_raid_controller_attr(drac_controller,
                                                'PrimaryStatus')],
             firmware_version=self._get_raid_controller_attr(
-                drac_controller, 'ControllerFirmwareVersion'))
+                drac_controller, 'ControllerFirmwareVersion'),
+            bus=self._get_raid_controller_attr(drac_controller, 'Bus'))
 
     def _get_raid_controller_attr(self, drac_controller, attr_name):
         return utils.get_wsman_resource_attr(
@@ -300,7 +301,8 @@
             firmware_version=self._get_physical_disk_attr(drac_disk,
                                                           'Revision'),
             status=constants.PRIMARY_STATUS[drac_status],
-            raid_status=DISK_RAID_STATUS[drac_raid_status])
+            raid_status=DISK_RAID_STATUS[drac_raid_status],
+            sas_address=self._get_physical_disk_attr(drac_disk, 'SASAddress'))
 
     def _get_physical_disk_attr(self, drac_disk, attr_name):
         return utils.get_wsman_resource_attr(
@@ -394,13 +396,19 @@
             virtual_disk_prop_names.append('VirtualDiskName')
             virtual_disk_prop_values.append(disk_name)
 
-        if span_depth is not None:
+        # Do not provide optional 'SpanDepth' argument for RAID 10 when
+        # there are more than 16 backing physical disks (HDD).
+        if (span_depth is not None and not (raid_level == '1+0' and
+                                            len(physical_disks) > 16)):
             utils.validate_integer_value(span_depth, 'span_depth', error_msgs)
 
             virtual_disk_prop_names.append('SpanDepth')
             virtual_disk_prop_values.append(str(span_depth))
 
-        if span_length is not None:
+        # Do not provide optional 'SpanLength' argument for RAID 10 when
+        # there are more than 16 backing physical disks (HDD).
+        if (span_length is not None and not (raid_level == '1+0' and
+                                             len(physical_disks) > 16)):
             utils.validate_integer_value(span_length, 'span_length',
                                          error_msgs)
 
