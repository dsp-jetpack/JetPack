---
- name: create powerflex-ansible work dir
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
  with_items:
    - "{{ playbook_dir }}/powerflex-ansible"

- name: set groups
  set_fact:
    powerflex_mdm: "{{ groups['powerflex_mdm'] }}"
    powerflex_lia: "{{ groups['powerflex_lia'] }}"
    powerflex_sds: "{{ groups['powerflex_sds'] }}"
    powerflex_sdc: "{{ groups['powerflex_sdc'] }}"

- name: detect private key file
  # needs become to be able to read the ssh private key
  become: true
  stat:
    path: "{{ playbook_dir }}/ssh_private_key"
  register: detect_private_key_file

- name: set private key file
  # needs become to be able to read the ssh private key
  become: true
  set_fact:
    powerflex_ansible_private_key_file: "{{ playbook_dir }}/ssh_private_key"
  when: powerflex_ansible_private_key_file is not defined and detect_private_key_file.stat.exists

- name: generate custom inventory
  template:
    src: "inventory.ini.j2"
    dest: "{{ playbook_dir }}/powerflex-ansible/inventory.yml"

- name: generate powerflex-ansible extra vars
  copy:
    dest: "{{ playbook_dir }}/powerflex-ansible/extra_vars.yml"
    content: "{{ powerflex_ansible_extra_vars | to_nice_yaml }}"

- name: set powerflex-ansible playbook list
  set_fact:
    powerflex_ansible_playbooks: ['/usr/share/powerflex-ansible/site.yaml']

- name: set powerflex-ansible command list
  set_fact:
    powerflex_ansible_command_list:
      - ANSIBLE_LOG_PATH="{{ playbook_dir }}/powerflex-ansible//powerflex-ansible.log"
      - ANSIBLE_SSH_RETRIES=3
      - ANSIBLE_HOST_KEY_CHECKING="False"
      - ANSIBLE_FORKS=25
      - ANSIBLE_GATHER_TIMEOUT=60
      - ansible-playbook
      - '{% if powerflex_ansible_private_key_file is defined %}--private-key {{ powerflex_ansible_private_key_file }}{% endif %}'
      - '{% if ansible_python_interpreter is defined %}-e ansible_python_interpreter={{ ansible_python_interpreter }}{% endif %}'
      - '-{%- for number in range(0, powerflex_ansible_playbook_verbosity) -%}v{% endfor %}'
      - '--extra-vars'
      - '@{{ playbook_dir }}/powerflex-ansible/extra_vars.yml'

- name: set the ANSIBLE_LOG_PATH in powerflex_ansible_environment variables
  set_fact:
    calling_ansible_log_path: "{{ playbook_dir }}/powerflex-ansible/powerflex_ansible_command.log"

- name: save powerflex-ansible playbook command to shell script
  copy:
    dest: "{{ playbook_dir }}/powerflex-ansible/powerflex_ansible_command.sh"
    mode: '0755'
    content: |
      #!/usr/bin/env bash
      set -e
      echo "Running $0" >> {{ calling_ansible_log_path }}
      {% set inv = "-i "+ playbook_dir +"/powerflex-ansible/inventory.yml" %}
      {% for playbook in powerflex_ansible_playbooks %}
      {{ powerflex_ansible_command_list|join(' ') }} {{ inv }} {{ playbook }} 2>&1
      {% endfor %}

- name: set powerflex-ansible shell script list
  set_fact:
    powerflex_ansible_script:
      - "{{ playbook_dir }}/powerflex-ansible/powerflex_ansible_command.sh"

- name: run powerflex-ansible
  become: true
  shell: "{{ item }}"
  no_log: true
  failed_when: false
  register: outputs
  when: outputs.rc is undefined or outputs.rc == 0
  loop: "{{ powerflex_ansible_script }}"

- name: search output of powerflex-ansible run non-zero return codes
  set_fact:
    powerflex_ansible_std_out_err: "{{ item.stdout_lines | default([]) | union(item.stderr_lines | default([])) }}"
  no_log: true
  when:
    - ( item.rc is defined and item.rc != 0 ) or ( item.stdout == 'FAILED' ) 
  loop: "{{ outputs.results }}"

- name: print powerflex-ansible output in case of failure
  debug:
    var: powerflex_ansible_std_out_err
  when:
    - powerflex_ansible_std_out_err is defined
  failed_when:
    - powerflex_ansible_std_out_err is defined

