# (c) 2016 Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

heat_template_version: 2014-10-16

description: >
  Extra config for post-deployment

parameters:
  servers:
    type: json

resources:
  ExtraConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        # BEGIN workaround for BZ 1283721
        if [[ $HOSTNAME =~ "cephstorage-0" ]]; then
        {
          echo "Checking Ceph pools pg_num..."
          sleep 10
          hiera ceph_pool_pgs {} | HOME="/root" python -c "
        import re, subprocess, sys, time, yaml
        def issue_cmd(cmd):
            print(cmd)
            for i in range(1, 10):
                try:
                    return subprocess.check_output(cmd.split(), stderr=subprocess.STDOUT)
                except subprocess.CalledProcessError as e:
                    if 'EBUSY' in e.output:
                        print '  Cluster is busy, retrying...'
                        time.sleep(5)
                    else:
                        print '{}\nAborting due to fatal error.'.format(e.output)
                        sys.exit(1)
        
            print 'Aborting due to excessive retries.'
            sys.exit(1)
        
        def set_pg_num(pool, pg_num):
            out = issue_cmd('ceph osd pool get {} pg_num'.format(pool))
            print(out)
            m = re.search('(\S*)(pg_num: )(\d+)(\S*)', out)
            if not m:
                print 'Aborting due to error reading current pg_num.'
                sys.exit(1)
            
            pg_cur = int(m.group(3))
            if pg_cur == pg_num:
                print 'Pool \'{}\' pg_num already set to {}'.format(pool, pg_num)
            elif pg_cur > pg_num:
                print 'Cannot decrease pool \'{}\' pg_num from {} to {}'.format(pool, pg_cur, pg_num)
            else:
                print 'Increasing pool \'{}\' pg_num from {} to {}'.format(pool, pg_cur, pg_num)
                while pg_cur < pg_num:
                    pg_cur *= 2
                    if pg_cur > pg_num:
                        pg_cur = pg_num
        
                    issue_cmd('ceph osd pool set {} pg_num {}'.format(pool, pg_cur))
                    time.sleep(10)
        
                issue_cmd('ceph osd pool set {} pgp_num {}'.format(pool, pg_num))
        
        input = ' '.join(map(str.strip, sys.stdin.readlines()))
        pool_pgs = yaml.load(input.replace('=>', ': '))
        for pool in pool_pgs:
            set_pg_num(pool, pool_pgs[pool])
        "
        } >> /root/post-deploy.txt 2>&1
        fi
        # END workaround for BZ 1283721
        if [[ $HOSTNAME =~ "controller" ]]; then
        {
          echo "Restarting RGW..."
          chkconfig --add ceph-radosgw
          systemctl restart ceph-radosgw
        } >> /root/post-deploy.txt 2>&1
        fi

  ExtraDeployments:
    type: OS::Heat::SoftwareDeployments
    properties:
      servers:  {get_param: servers}
      config: {get_resource: ExtraConfig}
      actions: ['CREATE', 'UPDATE' ] # Only do this on CREATE or UPDATE
