# (c) 2016 Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

heat_template_version: 2014-10-16

resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: wipe_disk}
      - config: {get_resource: patch_rgw}

  wipe_disk:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        if [[ $HOSTNAME =~ "cephstorage" ]]; then
        {
          lsblk -dno NAME,TYPE | \
          while read disk type; do
            # Skip if the device type isn't "disk" or if it's mounted
            [ "${type}" == "disk" ] || continue
            device="/dev/${disk}"
            if grep -q ^${device}[1-9] /proc/mounts; then
              echo "Skipping ${device} because it's mounted"
              continue
            fi
            echo "Partitioning disk: ${disk}"
            wipefs -a ${device}
            echo
          done
          parted -lm
        } > /root/wipe-disk.txt 2>&1
        fi

  patch_rgw:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        {
          file="/usr/share/openstack-puppet/modules/ceph/manifests/profile/rgw.pp"
          echo "Patching ${file}..."
          sed -i "s|\${name}|radosgw.gateway|g" ${file}
          file="/usr/share/openstack-puppet/modules/tripleo/manifests/loadbalancer.pp"
          echo "Patching ${file}..."
          sed -i "s|ports             => '8080'|ports             => '7480'|" ${file}
        } > /root/patch-rgw.txt 2>&1
        fi

outputs:
  OS::stack_id:
    value: {get_resource: userdata}
