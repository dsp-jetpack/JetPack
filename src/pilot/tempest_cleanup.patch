--- /usr/lib/python2.7/site-packages/tempest/cmd/cleanup_service.py	2018-10-31 10:07:15.000000000 -0500
+++ /usr/lib/python2.7/site-packages/tempest/cmd/cleanup_service.new	2018-12-03 05:03:15.565856843 -0600
@@ -1,3 +1,4 @@
+#!/usr/bin/env python
 
 # Copyright 2015 Dell Inc.
 #
@@ -98,20 +99,20 @@
         for key, value in kwargs.items():
             setattr(self, key, value)
 
-        self.tenant_filter = {}
-        if hasattr(self, 'tenant_id'):
-            self.tenant_filter['tenant_id'] = self.tenant_id
-
-    def _filter_by_tenant_id(self, item_list):
-        if (item_list is None
-                or not item_list
-                or not hasattr(self, 'tenant_id')
-                or self.tenant_id is None
-                or 'tenant_id' not in item_list[0]):
+        self.project_filter = {}
+        if hasattr(self, 'project_id'):
+            self.project_filter['project_id'] = self.project_id
+
+    def _filter_by_project_id(self, item_list):
+        if (item_list is None or
+                not item_list or
+                not hasattr(self, 'project_id') or
+                self.project_id is None or
+                'project_id' not in item_list[0]):
             return item_list
 
         return [item for item in item_list
-                if item['tenant_id'] == self.tenant_id]
+                if item['project_id'] == self.project_id]
 
     def list(self):
         pass
@@ -319,13 +320,13 @@
     def delete(self):
         client = self.client
         try:
-            client.delete_quota_set(self.tenant_id)
+            client.delete_quota_set(self.project_id)
         except Exception:
             LOG.exception("Delete Volume Quotas exception.")
 
     def dry_run(self):
         quotas = self.client.show_quota_set(
-            self.tenant_id, params={'usage': True})['quota_set']
+            self.project_id, params={'usage': True})['quota_set']
         self.data['volume_quotas'] = quotas
 
 
@@ -338,7 +339,7 @@
     def delete(self):
         client = self.client
         try:
-            client.delete_quota_set(self.tenant_id)
+            client.delete_quota_set(self.project_id)
         except Exception:
             LOG.exception("Delete Quotas exception.")
 
@@ -370,7 +371,7 @@
 
     def list(self):
         client = self.networks_client
-        networks = client.list_networks(**self.tenant_filter)
+        networks = client.list_networks(**self.project_filter)
         networks = networks['networks']
         # filter out networks declared in tempest.conf
         if self.is_preserve:
@@ -397,7 +398,7 @@
 
     def list(self):
         client = self.floating_ips_client
-        flips = client.list_floatingips(**self.tenant_filter)
+        flips = client.list_floatingips(**self.project_filter)
         flips = flips['floatingips']
         LOG.debug("List count, %s Network Floating IPs", len(flips))
         return flips
@@ -420,7 +421,7 @@
 
     def list(self):
         client = self.routers_client
-        routers = client.list_routers(**self.tenant_filter)
+        routers = client.list_routers(**self.project_filter)
         routers = routers['routers']
         if self.is_preserve:
             routers = [router for router in routers
@@ -456,7 +457,7 @@
         client = self.client
         hms = client.list_health_monitors()
         hms = hms['health_monitors']
-        hms = self._filter_by_tenant_id(hms)
+        hms = self._filter_by_project_id(hms)
         LOG.debug("List count, %s Health Monitors", len(hms))
         return hms
 
@@ -480,7 +481,7 @@
         client = self.client
         members = client.list_members()
         members = members['members']
-        members = self._filter_by_tenant_id(members)
+        members = self._filter_by_project_id(members)
         LOG.debug("List count, %s Members", len(members))
         return members
 
@@ -504,7 +505,7 @@
         client = self.client
         vips = client.list_vips()
         vips = vips['vips']
-        vips = self._filter_by_tenant_id(vips)
+        vips = self._filter_by_project_id(vips)
         LOG.debug("List count, %s VIPs", len(vips))
         return vips
 
@@ -528,7 +529,7 @@
         client = self.client
         pools = client.list_pools()
         pools = pools['pools']
-        pools = self._filter_by_tenant_id(pools)
+        pools = self._filter_by_project_id(pools)
         LOG.debug("List count, %s Pools", len(pools))
         return pools
 
@@ -552,7 +553,7 @@
         client = self.metering_label_rules_client
         rules = client.list_metering_label_rules()
         rules = rules['metering_label_rules']
-        rules = self._filter_by_tenant_id(rules)
+        rules = self._filter_by_project_id(rules)
         LOG.debug("List count, %s Metering Label Rules", len(rules))
         return rules
 
@@ -576,7 +577,7 @@
         client = self.metering_labels_client
         labels = client.list_metering_labels()
         labels = labels['metering_labels']
-        labels = self._filter_by_tenant_id(labels)
+        labels = self._filter_by_project_id(labels)
         LOG.debug("List count, %s Metering Labels", len(labels))
         return labels
 
@@ -599,7 +600,7 @@
     def list(self):
         client = self.ports_client
         ports = [port for port in
-                 client.list_ports(**self.tenant_filter)['ports']
+                 client.list_ports(**self.project_filter)['ports']
                  if port["device_owner"] == "" or
                  port["device_owner"].startswith("compute:")]
 
@@ -626,7 +627,7 @@
 class NetworkSecGroupService(NetworkService):
     def list(self):
         client = self.security_groups_client
-        filter = self.tenant_filter
+        filter = self.project_filter
         # cannot delete default sec group so never show it.
         secgroups = [secgroup for secgroup in
                      client.list_security_groups(**filter)['security_groups']
@@ -655,7 +656,7 @@
 
     def list(self):
         client = self.subnets_client
-        subnets = client.list_subnets(**self.tenant_filter)
+        subnets = client.list_subnets(**self.project_filter)
         subnets = subnets['subnets']
         if self.is_preserve:
             subnets = self._filter_by_conf_networks(subnets)
@@ -723,7 +724,7 @@
 
     def list(self):
         client = self.client
-        images = client.list_images({"all_tenants": True})['images']
+        images = client.list_images()['images']
         if not self.is_save_state:
             images = [image for image in images if image['id']
                       not in self.saved_state_json['images'].keys()]
@@ -806,7 +807,7 @@
 
     def __init__(self, manager, **kwargs):
         super(RoleService, self).__init__(kwargs)
-        self.client = manager.roles_client
+        self.client = manager.roles_v3_client
 
     def list(self):
         try:
@@ -815,8 +816,8 @@
             if not self.is_save_state:
                 roles = [role for role in roles if
                          (role['id'] not in
-                          self.saved_state_json['roles'].keys()
-                          and role['name'] != CONF.identity.admin_role)]
+                          self.saved_state_json['roles'].keys() and
+                          role['name'] != CONF.identity.admin_role)]
                 LOG.debug("List count, %s Roles after reconcile", len(roles))
             return roles
         except Exception:
@@ -851,13 +852,16 @@
     def list(self):
         projects = self.client.list_projects()['projects']
         if not self.is_save_state:
-            projects = [project for project in projects if (project['id']
-                        not in self.saved_state_json['projects'].keys()
-                        and project['name'] != CONF.auth.admin_project_name)]
+            project_ids = self.saved_state_json['projects']
+            projects = [project
+                        for project in projects
+                        if (project['id'] not in project_ids and
+                            project['name'] != CONF.auth.admin_project_name)]
 
         if self.is_preserve:
-            projects = [project for project in projects if project['name']
-                        not in CONF_PROJECTS]
+            projects = [project
+                        for project in projects
+                        if project['name'] not in CONF_PROJECTS]
 
         LOG.debug("List count, %s Projects after reconcile", len(projects))
         return projects
@@ -958,3 +962,4 @@
     global_services.append(DomainService)
     global_services.append(RoleService)
     return global_services
+
