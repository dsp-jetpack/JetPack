--- job.py.orig	2018-11-26 15:48:07.000000000 -0600
+++ job.py	2019-06-20 01:46:25.455571796 -0500
@@ -117,7 +117,10 @@
                           cim_system_creation_class_name='DCIM_ComputerSystem',
                           cim_system_name='DCIM:ComputerSystem',
                           reboot=False,
-                          start_time='TIME_NOW'):
+                          start_time='TIME_NOW',
+                          realtime=False,
+                          wait_for_idrac=True,
+                          method_name='CreateTargetedConfigJob'):
         """Creates a config job
 
         In CIM (Common Information Model), weak association is used to name an
@@ -142,6 +145,12 @@
                            but will not start execution until
                            schedule_job_execution is called with the returned
                            job id.
+        :param realtime: Indicates if reatime mode should be used.
+               Valid values are True and False. Default value is False.
+        :param wait_for_idrac: indicates whether or not to wait for the
+                               iDRAC to be ready to accept commands before
+                               issuing the command.
+        :param method_name: method of CIM object to invoke
         :returns: id of the created job
         :raises: WSManRequestFailure on request failures
         :raises: WSManInvalidResponse when receiving invalid response
@@ -149,7 +158,6 @@
                  interface
         :raises: DRACUnexpectedReturnValue on return value mismatch
         """
-
         selectors = {'SystemCreationClassName': cim_system_creation_class_name,
                      'SystemName': cim_system_name,
                      'CreationClassName': cim_creation_class_name,
@@ -157,15 +165,19 @@
 
         properties = {'Target': target}
 
-        if reboot:
+        if realtime:
+            properties['RealTime'] = '1'
+
+        if not realtime and reboot:
             properties['RebootJobType'] = '3'
 
         if start_time is not None:
             properties['ScheduledStartTime'] = start_time
 
-        doc = self.client.invoke(resource_uri, 'CreateTargetedConfigJob',
-                                 selectors, properties,
-                                 expected_return_value=utils.RET_CREATED)
+        doc = self.client.invoke(resource_uri, method_name,
+                                     selectors, properties,
+                                     expected_return_value=utils.RET_CREATED,
+                                     wait_for_idrac=wait_for_idrac)
 
         return self._get_job_id(doc)
 
