import sys, getopt, time, subprocess, paramiko,logging, traceback, os.path, urllib2, shutil
from osp_deployer.foreman import Foreman
from osp_deployer.ceph import Ceph
from auto_common import Ipmi, Ssh, FileHelper, Scp, UI_Manager
from osp_deployer import Settings


def verify_subscription_status(public_ip, user, password, retries):
    i = 0
    subscriptionStatus = Ssh.execute_command(public_ip, user, password, "subscription-manager status")[0]
    while("Current" not in subscriptionStatus and i < retries):
        if "Unknown" in subscriptionStatus:
            return subscriptionStatus

        time.sleep(60)
        subscriptionStatus = Ssh.execute_command(public_ip, user, password, "subscription-manager status")[0]
        i += 1;
    return subscriptionStatus



if __name__ == '__main__':


    try :
        ip = '10.21.148.112'
        user = "root"
        passwd = "QaCl0ud"
        for num in range(1,100):
            print "# " + str(num)
            # Start with an unregistered system
            cmd1 = 'subscription-manager register --username dellcloudsol --password cr0wBar!'
            cmd2 = 'subscription-manager attach --pool 8a85f9814b7ed22d014b949b759f480c'

            Ssh.execute_command(ip, user, passwd, cmd1)
            Ssh.execute_command(ip, user, passwd, cmd2)

            subscriptionStatus = verify_subscription_status(ip, user, passwd, 20)
            if "Current" not in subscriptionStatus:
                raise AssertionError("node did not register properly : " + subscriptionStatus)

            cmd3 = 'subscription-manager remove --all'
            cmd4 = 'subscription-manager unregister'
            Ssh.execute_command(ip, user, passwd, cmd3)
            Ssh.execute_command(ip, user, passwd, cmd4)

            subscriptionStatus = verify_subscription_status(ip, user, passwd, 20)
            if "Unknown" not in verify_subscription_status(ip, user, passwd, 20):
                raise AssertionError("node did not un-register properly : " + subscriptionStatus)





    except:

        e = sys.exc_info()[0]

        print e
        print traceback.format_exc()